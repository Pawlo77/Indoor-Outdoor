default_language_version:
  python: "python3"

repos:
  # check yaml configs
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
      - id: check-xml

  # formatting for python code with auto-flake related fixes
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.0
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format

  # python code formatting checks
  - repo: https://github.com/PyCQA/flake8
    rev: 7.1.2
    hooks:
      - id: flake8
        args:
          - --max-line-length=100
          - --exclude=.git,__init__.py
          - --ignore=W503

  # python imports sorting
  - repo: https://github.com/PyCQA/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args:
          - --profile=black
          - --multi-line=3
          - --trailing-comma
          - --force-grid-wrap=0
          - --use-parentheses
          - --ensure-newline-before-comments
          - --line-length=88

  # partial fixes for flake8 detected problems
  - repo: https://github.com/myint/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --exclude=__init__.py,abstract.py
          - --expand-star-imports
          - --ignore-init-module-imports

  # python code logic checks - docstrings, security, formatting
  - repo: https://github.com/PyCQA/pylint
    rev: v3.3.5
    hooks:
      - id: pylint
        args:
          - --load-plugins=pylint.extensions.check_elif,pylint.extensions.docparams,pylint.extensions.magic_value
          - --max-line-length=100
        additional_dependencies:
          - datasets
          - lmstudio
          - numpy
          - pandas
          - Pillow
          - Requests
          - scikit_learn
          - torch
          - tqdm
          - transformers[torch]
          - humanize
          - matplotlib
          - torchvision
          - timm
          - torchinfo
          - accelerate
          - evaluate

  # python code security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.3
    hooks:
      - id: bandit
        args:
          - -ll # exclude low-severity errors
          - --exclude
          - tools/docker/airflow-release/tests/

  # format for macros definitions
  - repo: https://github.com/tconbeer/sqlfmt
    rev: v0.26.0
    hooks:
      - id: sqlfmt
        language_version: python
        additional_dependencies: [".[jinjafmt]"]
        files: ^.*/macros/.*\.sql$

  # - repo: local
  #   hooks:
  #     - id: mypy
  #       name: mypy
  #       entry: mypy --strict .
  #       language: python
  #       language_version: python3.12.9
  #       types: [python]
  #       # use require_serial so that script
  #       # is only called once per commit
  #       require_serial: true
  #       # Print the number of files as a sanity-check
  #       verbose: true
  #       pass_filenames: false
  #       additional_dependencies:
  #         - mypy
  #         - types-requests
  #         - pandas-stubs
  #         - datasets
  #         - lmstudio
  #         - numpy
  #         - pandas
  #         - Pillow
  #         - Requests
  #         - scikit_learn
  #         - torch
  #         - tqdm
  #         - transformers[torch]
  #         - humanize
  #         - matplotlib
  #         - torchvision
  #         - timm
  #         - torchinfo
  #         - accelerate
  #         - evaluate

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: fix-byte-order-marker
